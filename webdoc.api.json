{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-xOdFWjrO6EM92SzgRtgzL",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "6grx4IZkU48umfmCHbnxc",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "GgDKRyWGYkIioB7GOQo6u",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"members": [
							{
								"id": "R5tK6ltcN1509o3BB3pX3",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								]
							}
						]
					},
					{
						"id": "SqNlN1u6m_P78vLTY2IZq",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"members": [
							{
								"id": "S6onuQhMCMlo2agmFGMRw",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "yM5sOECEZGqcDaLzF2J_p",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "xyWCBFSStqT7Wr2V5afp4",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "FdnrXM541PUlCm12hlBYN",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "tvWwWYqmgLK8GS-qy4jRA",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"extends": [
							"PIXI.System"
						],
						"members": [
							{
								"id": "ZzkdG_rYxW53GbJnvYgpP",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "UAImW0FtsHJB1DnrsC5Ny",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "lWDEvzPnFXotZQjnGdI6h",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "klgIvGwyF2GNhqncByJOR",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "IQoVYMvuTwohaXDceaR2M",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "gzrxZ4hy56UximJYqIDjS",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": []
							},
							{
								"id": "m6JyWwfFPF5u3UJXj2nHr",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "swM32kEZJhRntVXcLMYTx",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"members": [
							{
								"id": "60txi-mQfYiQmEFZcTEIC",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "f343aR09lmOwOXNR7cpcf",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "wbLmeX55JROvBYHHqPppq",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "Y7TFSrAutU1WZhY_HoeH5",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"members": [
							{
								"id": "etqijS9TB78kJE2TstD70",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "aOkFWo94z1npu8w-6xDfK",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "8hVh8-wJXanfZKqObDb4N",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "eStbsKkeiOypOo-KJz4hL",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>..."
							},
							{
								"id": "uG4pd3eq7wj9wSh-w2g67",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "4iaPfUCIxk1iEfvBFyJPM",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>"
							},
							{
								"id": "9uHfYlPNNkqEbTEWl5fv_",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "evAWcwxtwYOQpbQpByW9V",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:..."
							},
							{
								"id": "wrbCnoXtjy3hZrvVqtmDI",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>"
							},
							{
								"id": "Et0UCpxbdufwYTLAcIM-c",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>"
							},
							{
								"id": "bQ4kUGlLfLq8zZaV0Yo7J",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a..."
							},
							{
								"id": "cA0K9YSStALvKljjij96b",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ..."
							},
							{
								"id": "pNYrhOWEsebh3LdSjVKVk",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "4G7U4foxBvAfHmWjAtFn7",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>"
							},
							{
								"id": "Kih1_lmcYnIdvQs7pB7p5",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>"
							},
							{
								"id": "0fOZBjlmlUQ6hSrksynKs",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is..."
							},
							{
								"id": "SsEZoRrkd9Uq8zq_egQpH",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit..."
							},
							{
								"id": "fBAObO_Sk-188Tfm1jiS5",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "AwhScKdXBXHrX7QSzCcHB",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e..."
							},
							{
								"id": "yDupn6kRRbRCWSIu4yUZV",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu..."
							},
							{
								"id": "WBGYGrWKDbZytG1YJ4ox0",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "0yym3AxbPX4OEMkepA9_j",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "biQ1LEt2uLCuAWa4393bv",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "PVpPQL19H6B5pFku5aKYW",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "jc4J-Y137J2m8oB3pX2Sq",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "3Z-HxQe6sl_RYlpn9rTdD",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "YjQIQGMMvjNtamLkKIZW6",
								"name": "drawBatches",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "8Z_fqe4yInmQplQCpw6as",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "1Gh31KbiFcTWLPek8NXco",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "K1SW1-tpipc56mdXgFJ_-",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "xlI3DiUa0Vq6dRVkxkf4E",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "KycwSVue9yNZHZ4DR_4tz",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "H3gp_2E36l6Gw9ZYkRZnA",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "ntJM17SS95JHXvbiP-t-A",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "hD5bqebJEFsFKo5KQ9_Pz",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							},
							{
								"id": "L0pxX99gM4pzoTmg5bcA4",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							}
						]
					},
					{
						"id": "I2W56gzZ-Dxvsm7y6H5SK",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"extends": [],
						"members": [
							{
								"id": "O5OJRs2v2XbMfFmMgn77C",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "tuZX0WCHfp1PdNfMgrj_h",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "RSXLf5XpDJCdjFkAyLCUZ",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc"
					},
					{
						"id": "qsY9ciecWYHDxeiJVf4Ez",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "PropertyDoc",
						"members": [
							{
								"id": "uIJ2Z3TmofmKHs0D8hYcZ",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "PDlOS6Wz_cOdHY1dT5ubl",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					}
				]
			},
			{
				"id": "_-O8CCFLJdUbPQrEf7DHf",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"members": [
					{
						"id": "rSFVbj_MGLSBsQ9umik0a",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"members": [
							{
								"id": "HziTpun0gESc61xTt6DF5",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "BHnux4tA7FF83dQf1ma5U",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "Q87s5zuJGzczaqJFqcW6t",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "Oj8pw7NlH0JyCmy8ChtRK",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "FEMj6NCmIbvc2EqZd11AV",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "FV7bJ8WgcejgooEj8ToX1",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					}
				]
			},
			{
				"id": "mBLtsggMxA2P2bg03PS4l",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"members": [
					{
						"id": "Q56ghgXA_WsAnbUjymXAo",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "PfEyXVt3hlcQD_2db-Nmf",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						]
					}
				]
			},
			{
				"id": "yVWv-1lBlUxevFU9fux_a",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({...",
				"extends": [
					"PhysicalObject"
				],
				"members": [
					{
						"id": "HxHGj9nGlz2V6IYOttkxp",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "tmXhgY7T8yj9_mBFJ9QPb",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "jTUAxzqOFhFWAX-8sUpWg",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "MRXy1sAsKt60BFkd698ck",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "J65AtVSJGzmMVJWg59M15",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "bFwgE-2nWTFet0yh70bQt",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "D8s4CHMOwVX8Vd0iwKb98",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "Pj-gYo-p8SZ_yQ7epRXgq",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "X13FYgzEkHMIY7yfRifbe",
						"name": "constructor",
						"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "b7LBDL-Qi4owuxiuOyTrs",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					}
				]
			},
			{
				"id": "H2uklN23B8YJOE8OPMu5b",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"extends": [
					"Bean"
				],
				"members": [
					{
						"id": "vBLtYvbrWD63d8K3iC06z",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "ASz9r7LRnIijdvvNvjlb1",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "ahsRuTQLgKwGTYjHApwk4",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "hHJDYUP-UVAh7JIR9H8u6",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": []
					}
				]
			},
			{
				"id": "z5EDM3Ryl4kSJSzvtLAkY",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"members": [
					{
						"id": "LUVTPh7-X2yQucDRw4oMC",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "7ilbzcCLkNQ3EuBlTI8if",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "znM4SDtfKwKmmPkxMHFZt",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "yANO0Qae-bG-zFzFfIwWJ",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "vRMhY_DXz-eSLl6U7fGtj",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"extends": [
					"PhysicalInteraction"
				],
				"members": [
					{
						"id": "Bq9ACsm3VaQ3zB_Sg_ckr",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "Z57GS1rz4e0RHAw2fQIME",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "Lx7W8E9jqKnLBwBxOxUT-",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"members": [
					{
						"id": "8oPH6NqBC3_RYPC1pu6iS",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "xCvm4FuBkAzdY2dzIBoWg",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2><PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "c0FRvw5BBSx55M2MGgrGe",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "UL-gmX-S0b2EDy9P1b9cX",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"members": [
					{
						"id": "08wO_sGqP97E1WoKN9PbU",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "PHLQCjODkvr7GsYRl8fxl",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "3sNgk1vmOizSlGqf10Jyl",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "rAFwhJjdCsvB1Td72u_JA",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "pLbzsqKDRNi-T8Js8A3Jb",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "uWiHhVL1oURd7RtK68jPZ",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"extends": [
					"Array"
				],
				"members": [
					{
						"id": "JjVnNuuKHzXfXvo7humA3",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>"
					},
					{
						"id": "RF0mXGcL0FmacFPBwyapN",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "kFpzyrwVhVunnXhUXsWBU",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "pbToufikmFisJEoeY3x97",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "We3hyKidWbJhPuc3FY1Oe",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"members": [
					{
						"id": "j1tyFU_D9I78hfaZqfmN1",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "XcOYGxM3uuGJvCbR7V_if",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "ZJVRIu_daNssJUwQWvJ1A",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "VYzjMy8vosEDIic-oO2fw",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "6bS5GorIYUwDYvMtMNdmS",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "cHvVPnOGx89FDGQmRgdQF",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "vempyUiLg5b30Lh9p_mcV",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "aOdCqtJWUi1ITNDW8FmXE",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"members": [
					{
						"id": "Prjy7rLhmlXr0BzUlvxtT",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "OUGdidVfeTKTuLUNY6sBe",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"members": [
					{
						"id": "NhIlAtHuZu4rruBonmI0h",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						]
					},
					{
						"id": "l4-VmTpVzDQAN8n2KwySE",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						]
					},
					{
						"id": "p74IbeKqpwx3xMChvN5pz",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "-SiM33OQE7_0B0JhA2nNE",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, : Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "ngRYkWEM4JAOsGkEvEA9t",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ : Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				]
			},
			{
				"id": "xQrRQ2T4Pxwq0v0E4gDvP",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				]
			}
		]
	},
	"registry": {
		"pkg-20C9SZ7wjT3uTP5aQpzpk": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"6grx4IZkU48umfmCHbnxc": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"GgDKRyWGYkIioB7GOQo6u": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"R5tK6ltcN1509o3BB3pX3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"SqNlN1u6m_P78vLTY2IZq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"S6onuQhMCMlo2agmFGMRw": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"yM5sOECEZGqcDaLzF2J_p": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"xyWCBFSStqT7Wr2V5afp4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"FdnrXM541PUlCm12hlBYN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"tvWwWYqmgLK8GS-qy4jRA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"ZzkdG_rYxW53GbJnvYgpP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"UAImW0FtsHJB1DnrsC5Ny": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"lWDEvzPnFXotZQjnGdI6h": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"klgIvGwyF2GNhqncByJOR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"IQoVYMvuTwohaXDceaR2M": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"gzrxZ4hy56UximJYqIDjS": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"m6JyWwfFPF5u3UJXj2nHr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"swM32kEZJhRntVXcLMYTx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"60txi-mQfYiQmEFZcTEIC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"f343aR09lmOwOXNR7cpcf": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"wbLmeX55JROvBYHHqPppq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"Y7TFSrAutU1WZhY_HoeH5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"etqijS9TB78kJE2TstD70": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"aOkFWo94z1npu8w-6xDfK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"8hVh8-wJXanfZKqObDb4N": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"eStbsKkeiOypOo-KJz4hL": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"uG4pd3eq7wj9wSh-w2g67": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"4iaPfUCIxk1iEfvBFyJPM": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"9uHfYlPNNkqEbTEWl5fv_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"evAWcwxtwYOQpbQpByW9V": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"wrbCnoXtjy3hZrvVqtmDI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"Et0UCpxbdufwYTLAcIM-c": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"bQ4kUGlLfLq8zZaV0Yo7J": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"cA0K9YSStALvKljjij96b": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"pNYrhOWEsebh3LdSjVKVk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"4G7U4foxBvAfHmWjAtFn7": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"Kih1_lmcYnIdvQs7pB7p5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"0fOZBjlmlUQ6hSrksynKs": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"SsEZoRrkd9Uq8zq_egQpH": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"fBAObO_Sk-188Tfm1jiS5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"AwhScKdXBXHrX7QSzCcHB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"yDupn6kRRbRCWSIu4yUZV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"WBGYGrWKDbZytG1YJ4ox0": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"0yym3AxbPX4OEMkepA9_j": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"biQ1LEt2uLCuAWa4393bv": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"PVpPQL19H6B5pFku5aKYW": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"jc4J-Y137J2m8oB3pX2Sq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"3Z-HxQe6sl_RYlpn9rTdD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"YjQIQGMMvjNtamLkKIZW6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#drawBatches"
		},
		"8Z_fqe4yInmQplQCpw6as": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"1Gh31KbiFcTWLPek8NXco": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"K1SW1-tpipc56mdXgFJ_-": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"xlI3DiUa0Vq6dRVkxkf4E": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"KycwSVue9yNZHZ4DR_4tz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"H3gp_2E36l6Gw9ZYkRZnA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"ntJM17SS95JHXvbiP-t-A": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"hD5bqebJEFsFKo5KQ9_Pz": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"L0pxX99gM4pzoTmg5bcA4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"I2W56gzZ-Dxvsm7y6H5SK": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"O5OJRs2v2XbMfFmMgn77C": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"tuZX0WCHfp1PdNfMgrj_h": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"RSXLf5XpDJCdjFkAyLCUZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"qsY9ciecWYHDxeiJVf4Ez": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE"
		},
		"uIJ2Z3TmofmKHs0D8hYcZ": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE#DYNAMIC"
		},
		"PDlOS6Wz_cOdHY1dT5ubl": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE#STATIC"
		},
		"_-O8CCFLJdUbPQrEf7DHf": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"rSFVbj_MGLSBsQ9umik0a": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"HziTpun0gESc61xTt6DF5": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"BHnux4tA7FF83dQf1ma5U": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"Q87s5zuJGzczaqJFqcW6t": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"Oj8pw7NlH0JyCmy8ChtRK": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"FEMj6NCmIbvc2EqZd11AV": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"FV7bJ8WgcejgooEj8ToX1": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"mBLtsggMxA2P2bg03PS4l": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"Q56ghgXA_WsAnbUjymXAo": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"PfEyXVt3hlcQD_2db-Nmf": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"yVWv-1lBlUxevFU9fux_a": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"HxHGj9nGlz2V6IYOttkxp": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"tmXhgY7T8yj9_mBFJ9QPb": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"jTUAxzqOFhFWAX-8sUpWg": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"MRXy1sAsKt60BFkd698ck": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"J65AtVSJGzmMVJWg59M15": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"bFwgE-2nWTFet0yh70bQt": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"D8s4CHMOwVX8Vd0iwKb98": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"Pj-gYo-p8SZ_yQ7epRXgq": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"X13FYgzEkHMIY7yfRifbe": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"b7LBDL-Qi4owuxiuOyTrs": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"H2uklN23B8YJOE8OPMu5b": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"vBLtYvbrWD63d8K3iC06z": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"ASz9r7LRnIijdvvNvjlb1": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"ahsRuTQLgKwGTYjHApwk4": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"hHJDYUP-UVAh7JIR9H8u6": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"z5EDM3Ryl4kSJSzvtLAkY": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"LUVTPh7-X2yQucDRw4oMC": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"7ilbzcCLkNQ3EuBlTI8if": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"znM4SDtfKwKmmPkxMHFZt": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"yANO0Qae-bG-zFzFfIwWJ": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"vRMhY_DXz-eSLl6U7fGtj": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"Bq9ACsm3VaQ3zB_Sg_ckr": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"Z57GS1rz4e0RHAw2fQIME": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"Lx7W8E9jqKnLBwBxOxUT-": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"8oPH6NqBC3_RYPC1pu6iS": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"xCvm4FuBkAzdY2dzIBoWg": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"c0FRvw5BBSx55M2MGgrGe": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"UL-gmX-S0b2EDy9P1b9cX": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"08wO_sGqP97E1WoKN9PbU": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"PHLQCjODkvr7GsYRl8fxl": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"3sNgk1vmOizSlGqf10Jyl": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"rAFwhJjdCsvB1Td72u_JA": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"pLbzsqKDRNi-T8Js8A3Jb": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"uWiHhVL1oURd7RtK68jPZ": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"JjVnNuuKHzXfXvo7humA3": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"RF0mXGcL0FmacFPBwyapN": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"kFpzyrwVhVunnXhUXsWBU": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"pbToufikmFisJEoeY3x97": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"We3hyKidWbJhPuc3FY1Oe": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"j1tyFU_D9I78hfaZqfmN1": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"XcOYGxM3uuGJvCbR7V_if": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"ZJVRIu_daNssJUwQWvJ1A": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"VYzjMy8vosEDIic-oO2fw": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"6bS5GorIYUwDYvMtMNdmS": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"cHvVPnOGx89FDGQmRgdQF": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"vempyUiLg5b30Lh9p_mcV": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"aOdCqtJWUi1ITNDW8FmXE": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"Prjy7rLhmlXr0BzUlvxtT": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"OUGdidVfeTKTuLUNY6sBe": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"NhIlAtHuZu4rruBonmI0h": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"l4-VmTpVzDQAN8n2KwySE": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"p74IbeKqpwx3xMChvN5pz": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"-SiM33OQE7_0B0JhA2nNE": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"ngRYkWEM4JAOsGkEvEA9t": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"xQrRQ2T4Pxwq0v0E4gDvP": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}