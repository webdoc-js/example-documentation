{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-gE5BeWoUFJOo3A3rTlKFa",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "Yz5hpabmJcNjsURZPJv5e",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "_KccmuV8kqP1DKLKSRUNU",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"members": [
							{
								"id": "EIfQwd7S1KyhSN5uWclZp",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								]
							}
						]
					},
					{
						"id": "uZMPKbBOach9QPBiNcsXy",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"members": [
							{
								"id": "Gu2HZr4Dp9aYdHxarDbgr",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "hJDa3hKedvWxzD4ueLlUi",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "zS4qgXm5KoULTQ2fBYOv5",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "GINmCilmC2nrJsvFe8aQJ",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "RxWkUwyI92lsr-1CTqu5T",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"extends": [
							"PIXI.System"
						],
						"members": [
							{
								"id": "ydjenLP_J82hg6Akr40cl",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "il7JzI0ue0JwYQ1AkyYiu",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "YWjDJruGumkzE5n5cRXMo",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "kAoB27NOGwKiPVLk32l60",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "U46vEIbrsKty3Q7WjmP-y",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "fSBFzBKsUe3ss71DeoiEP",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": []
							},
							{
								"id": "BJwFihirj799D0h5JSNF4",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "C-_ezijhvZM0C1qrLebQR",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"members": [
							{
								"id": "d6df45lUggTpfWJcAZQip",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "GEgTQ9v_QIXmFyb3Wuf1x",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "8MD-CoNa9Zc6iCRPeFtvU",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "me8WGmfYLIXsBWWvrUiqb",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"members": [
							{
								"id": "2V9ULCygtq-k6j13qG6OM",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "-Mp_5AQtQbosh0mkVHptF",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "4iaz2DGCVLLg2DgH0_PXe",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "gmdBLGFhrtlMqoZaanHbV",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>..."
							},
							{
								"id": "LvEEjXHgl6iHiq1u_971L",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "Qgj9NTenCn0voRWkoeQgj",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>"
							},
							{
								"id": "T4S-d86Eb6qtVQbik6zVl",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "Sn6LQWhzkObhXlQV8euRh",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:..."
							},
							{
								"id": "ZEpfb2-_uRvbsVDtTtvHI",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>"
							},
							{
								"id": "O4TG7NxjsfsFoLyaJMWTU",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>"
							},
							{
								"id": "jiTV1_XHfJzUsIcfg-7c9",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a..."
							},
							{
								"id": "nfOmEg0P9J_3O2zazP77e",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ..."
							},
							{
								"id": "23VMwgk_aNaFZ0zwpTzBP",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "J3lmQhSH270PH0rgfqkU1",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>"
							},
							{
								"id": "1HYjGm1wrSJJX-o8FPcRL",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>"
							},
							{
								"id": "eTnN6x-fNW-C35oJK5mD3",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is..."
							},
							{
								"id": "jGM8Fp7UKvybY9d0tuw3s",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit..."
							},
							{
								"id": "6OHPtwJ0QAZpvLhKYsQ-D",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "SiD2MKjQz3dk6Nw-N93Xh",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e..."
							},
							{
								"id": "CGAYqDoT43nJfEnuzDjpG",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu..."
							},
							{
								"id": "3wUivhXN8-pNLXkf9zdEj",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "YZvzmcF8NElzsBIb5R85N",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "fU_eRcEHYvdE09xhi0Clp",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "93sSpc4t7rGdmkjyltv58",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "SD-msompCz3DMvhyC3Qqd",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "IZ69VxdbcZym2SgjDqzn_",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "Ys8sle_55n7cKBempGWJ3",
								"name": "drawBatches",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "MzxMloDkeWOIpgp31Y0Kw",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "yEOCMxcPKz8KtP6qdGnt6",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "aH-0RZibr_FIFuYVRX-wR",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "Tdg6QOjFxlJRMm3gXHHpW",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "YaJ1ZJcKebLc_ORV6mAGq",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "yba9tjRtVwvmBZZcL3JvD",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "if5NjZqA5jc5lE9Je_LQ5",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "umFyOUq5lJma5J5SoROpI",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							},
							{
								"id": "_-yv6rjERgeSm_SYI3YKU",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							}
						]
					},
					{
						"id": "jD1-Hc_HqK1jN2meJtU6J",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"extends": [],
						"members": [
							{
								"id": "IBhCacwBxCw7HBYJIhuMQ",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "SJJc4RXv0AeKx1JV6v2J6",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "_thj2T3s7DnDmcK8TMBez",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc"
					},
					{
						"id": "th1OxBLl3asaD8F0KZeR8",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "PropertyDoc",
						"members": [
							{
								"id": "SysE0az-cVja_BdcUvr4I",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "NhQdQpaCdiFJMKMiIoFeJ",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					}
				]
			},
			{
				"id": "bBrqKfYuXBbr_5mk_A88Y",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"members": [
					{
						"id": "XEtlmKl3KfYUO1SgAnzW5",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"members": [
							{
								"id": "ERwykF57S-fCpzv060Vwe",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "I4w41l5NiaHFbpy7g0y6E",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "A2Pd23n60uwCHVpZKyBuH",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "7HjfWnkqczxKwD-EaiWvo",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "OYGlYNkg8KZObGdO1UYv6",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "jv1Ak73hve-XQLVm90jjF",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					}
				]
			},
			{
				"id": "zZxR3iEH33UkkCQjSCmB1",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"members": [
					{
						"id": "xVnGDCs3XU500uDiwFV8-",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "XCadlqwjs1dtLTOc1h-8x",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						]
					}
				]
			},
			{
				"id": "4PlaZ88TC0XhulOS1ihge",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({...",
				"extends": [
					"PhysicalObject"
				],
				"members": [
					{
						"id": "04lYnUoAzub3b0Pw_g1j3",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "LIjeCRCjLGGoZ7lh-iNtm",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "CDgWWhOAHCOVdqOOeyI-D",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "O55_WTaZhjBW8ffVKWtsh",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "u_p0fa8tOJorFcRvipuOj",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "XVCGpUOd753CXyUe5-NED",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "RiX04qBbw2ZS7IJN6ZXZr",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "5ISRza0mYKUTlDldhF1JB",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "RyvO89xC6tKQUymTPD8yd",
						"name": "constructor",
						"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "cAs2XUYUZKFQ7ay_PKG0U",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					}
				]
			},
			{
				"id": "oflLbOChLpMESvw_xBT_d",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"extends": [
					"Bean"
				],
				"members": [
					{
						"id": "0GxsHVyDRsshJUSxYhh5u",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "5t9dnIeXx9KLGCF9eHy8G",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "CGet8Gv5ntBQFvkCMQ3Ki",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "_de3T7IgBVirBxDPD1CyQ",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": []
					}
				]
			},
			{
				"id": "e5oF5lOEsZQ7E8QAFBb2V",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"members": [
					{
						"id": "KXLBi9Sunli3_WygCgQRo",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "m169KcQVoE62eumc9njiw",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "CnpK6-0YMxeWR37-s2r_O",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "AzBYyfC6Y-KqK6bC1eqtT",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "yymA_vAnUdcpFjHFTY9sy",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"extends": [
					"PhysicalInteraction"
				],
				"members": [
					{
						"id": "OZcouPKIhkTEZToe9sJu8",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "Ya1z7vPUqNumit2u0v65K",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "IYmXdmO8TZu48wIvHj_41",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"members": [
					{
						"id": "8NgLknwhluHSnuKqd0kn4",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "QpbkXJfBe6Vdq1LSVyiDi",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2><PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "hiPNpWDo8sT6eAw6eIskI",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "HHM5Ckcn__XTQhg_ucAbA",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"members": [
					{
						"id": "iC-fcwTE63tRSjH8uShY1",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "Oy1k5Z1ixmJ1o4ODEXHtV",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "Cg_DH07m8UTFcgpUJTLc3",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "qkNgJQTrHJbJtb9l5TOtl",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "zkNm4FNLD9NmA83wMq-Ok",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "P-eX1mufZVwtUdx9SWkov",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"extends": [
					"Array"
				],
				"members": [
					{
						"id": "1gU5V-TQjKtiWCODKQzm7",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>"
					},
					{
						"id": "94i8-s8JDmdD20mO4z_A4",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "l0xtY6ewYSpUG050RPUc2",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "DV1wM2GybOEBuKUrfyCNM",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "ke9dPAhLl9_5bY2CNYkgL",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"members": [
					{
						"id": "qa0BN4pvxRpzTcZua1WrO",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "bJ8lRXCJZ8B9prCSjXmoN",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "bRfqqPiNq8lYZlQ4mpYhK",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "oRNRzBCXbwtLJ9k7u9dl1",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "m40zde4NS5d6lr3piCWZP",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "Kv1OOlgeSoD7RqLZ_-q4B",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "ZSqBmDK2vnF4JACFeCBAu",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "OFRORjjbTWrell9DFAQUA",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"members": [
					{
						"id": "fq2rVijW6vXG588zZcaVT",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "xCkhfvOl3OJ-qAYUDmr_w",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"members": [
					{
						"id": "UogF03lhOJCHPOkusPFzv",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						]
					},
					{
						"id": "pIBuJjPzdOzMnkT5qJQ_r",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						]
					},
					{
						"id": "YW4Jp4We_iN_689yaNRVS",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "7CWk-ZWNgM4pZLEz23EH7",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, : Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "HLfCoZ-V9Sn7U5f-3Sp-I",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ : Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				]
			},
			{
				"id": "jCQwW7KIugctCYxYcI-VB",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				]
			}
		]
	},
	"registry": {
		"pkg-b7qAVS-1d5MhnHwBuOx4-": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"Yz5hpabmJcNjsURZPJv5e": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"_KccmuV8kqP1DKLKSRUNU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"EIfQwd7S1KyhSN5uWclZp": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"uZMPKbBOach9QPBiNcsXy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"Gu2HZr4Dp9aYdHxarDbgr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"hJDa3hKedvWxzD4ueLlUi": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"zS4qgXm5KoULTQ2fBYOv5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"GINmCilmC2nrJsvFe8aQJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"RxWkUwyI92lsr-1CTqu5T": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"ydjenLP_J82hg6Akr40cl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"il7JzI0ue0JwYQ1AkyYiu": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"YWjDJruGumkzE5n5cRXMo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"kAoB27NOGwKiPVLk32l60": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"U46vEIbrsKty3Q7WjmP-y": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"fSBFzBKsUe3ss71DeoiEP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"BJwFihirj799D0h5JSNF4": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"C-_ezijhvZM0C1qrLebQR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"d6df45lUggTpfWJcAZQip": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"GEgTQ9v_QIXmFyb3Wuf1x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"8MD-CoNa9Zc6iCRPeFtvU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"me8WGmfYLIXsBWWvrUiqb": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"2V9ULCygtq-k6j13qG6OM": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"-Mp_5AQtQbosh0mkVHptF": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"4iaz2DGCVLLg2DgH0_PXe": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"gmdBLGFhrtlMqoZaanHbV": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"LvEEjXHgl6iHiq1u_971L": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"Qgj9NTenCn0voRWkoeQgj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"T4S-d86Eb6qtVQbik6zVl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"Sn6LQWhzkObhXlQV8euRh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"ZEpfb2-_uRvbsVDtTtvHI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"O4TG7NxjsfsFoLyaJMWTU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"jiTV1_XHfJzUsIcfg-7c9": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"nfOmEg0P9J_3O2zazP77e": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"23VMwgk_aNaFZ0zwpTzBP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"J3lmQhSH270PH0rgfqkU1": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"1HYjGm1wrSJJX-o8FPcRL": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"eTnN6x-fNW-C35oJK5mD3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"jGM8Fp7UKvybY9d0tuw3s": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"6OHPtwJ0QAZpvLhKYsQ-D": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"SiD2MKjQz3dk6Nw-N93Xh": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"CGAYqDoT43nJfEnuzDjpG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"3wUivhXN8-pNLXkf9zdEj": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"YZvzmcF8NElzsBIb5R85N": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"fU_eRcEHYvdE09xhi0Clp": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"93sSpc4t7rGdmkjyltv58": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"SD-msompCz3DMvhyC3Qqd": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"IZ69VxdbcZym2SgjDqzn_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"Ys8sle_55n7cKBempGWJ3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#drawBatches"
		},
		"MzxMloDkeWOIpgp31Y0Kw": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"yEOCMxcPKz8KtP6qdGnt6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"aH-0RZibr_FIFuYVRX-wR": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"Tdg6QOjFxlJRMm3gXHHpW": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"YaJ1ZJcKebLc_ORV6mAGq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"yba9tjRtVwvmBZZcL3JvD": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"if5NjZqA5jc5lE9Je_LQ5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"umFyOUq5lJma5J5SoROpI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"_-yv6rjERgeSm_SYI3YKU": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"jD1-Hc_HqK1jN2meJtU6J": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"IBhCacwBxCw7HBYJIhuMQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"SJJc4RXv0AeKx1JV6v2J6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"_thj2T3s7DnDmcK8TMBez": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"th1OxBLl3asaD8F0KZeR8": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE"
		},
		"SysE0az-cVja_BdcUvr4I": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE#DYNAMIC"
		},
		"NhQdQpaCdiFJMKMiIoFeJ": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE#STATIC"
		},
		"bBrqKfYuXBbr_5mk_A88Y": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"XEtlmKl3KfYUO1SgAnzW5": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"ERwykF57S-fCpzv060Vwe": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"I4w41l5NiaHFbpy7g0y6E": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"A2Pd23n60uwCHVpZKyBuH": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"7HjfWnkqczxKwD-EaiWvo": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"OYGlYNkg8KZObGdO1UYv6": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"jv1Ak73hve-XQLVm90jjF": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"zZxR3iEH33UkkCQjSCmB1": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"xVnGDCs3XU500uDiwFV8-": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"XCadlqwjs1dtLTOc1h-8x": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"4PlaZ88TC0XhulOS1ihge": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"04lYnUoAzub3b0Pw_g1j3": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"LIjeCRCjLGGoZ7lh-iNtm": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"CDgWWhOAHCOVdqOOeyI-D": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"O55_WTaZhjBW8ffVKWtsh": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"u_p0fa8tOJorFcRvipuOj": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"XVCGpUOd753CXyUe5-NED": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"RiX04qBbw2ZS7IJN6ZXZr": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"5ISRza0mYKUTlDldhF1JB": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"RyvO89xC6tKQUymTPD8yd": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"cAs2XUYUZKFQ7ay_PKG0U": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"oflLbOChLpMESvw_xBT_d": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"0GxsHVyDRsshJUSxYhh5u": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"5t9dnIeXx9KLGCF9eHy8G": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"CGet8Gv5ntBQFvkCMQ3Ki": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"_de3T7IgBVirBxDPD1CyQ": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"e5oF5lOEsZQ7E8QAFBb2V": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"KXLBi9Sunli3_WygCgQRo": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"m169KcQVoE62eumc9njiw": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"CnpK6-0YMxeWR37-s2r_O": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"AzBYyfC6Y-KqK6bC1eqtT": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"yymA_vAnUdcpFjHFTY9sy": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"OZcouPKIhkTEZToe9sJu8": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"Ya1z7vPUqNumit2u0v65K": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"IYmXdmO8TZu48wIvHj_41": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"8NgLknwhluHSnuKqd0kn4": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"QpbkXJfBe6Vdq1LSVyiDi": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"hiPNpWDo8sT6eAw6eIskI": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"HHM5Ckcn__XTQhg_ucAbA": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"iC-fcwTE63tRSjH8uShY1": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"Oy1k5Z1ixmJ1o4ODEXHtV": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"Cg_DH07m8UTFcgpUJTLc3": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"qkNgJQTrHJbJtb9l5TOtl": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"zkNm4FNLD9NmA83wMq-Ok": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"P-eX1mufZVwtUdx9SWkov": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"1gU5V-TQjKtiWCODKQzm7": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"94i8-s8JDmdD20mO4z_A4": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"l0xtY6ewYSpUG050RPUc2": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"DV1wM2GybOEBuKUrfyCNM": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"ke9dPAhLl9_5bY2CNYkgL": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"qa0BN4pvxRpzTcZua1WrO": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"bJ8lRXCJZ8B9prCSjXmoN": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"bRfqqPiNq8lYZlQ4mpYhK": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"oRNRzBCXbwtLJ9k7u9dl1": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"m40zde4NS5d6lr3piCWZP": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"Kv1OOlgeSoD7RqLZ_-q4B": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"ZSqBmDK2vnF4JACFeCBAu": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"OFRORjjbTWrell9DFAQUA": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"fq2rVijW6vXG588zZcaVT": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"xCkhfvOl3OJ-qAYUDmr_w": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"UogF03lhOJCHPOkusPFzv": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"pIBuJjPzdOzMnkT5qJQ_r": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"YW4Jp4We_iN_689yaNRVS": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"7CWk-ZWNgM4pZLEz23EH7": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"HLfCoZ-V9Sn7U5f-3Sp-I": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"jCQwW7KIugctCYxYcI-VB": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}