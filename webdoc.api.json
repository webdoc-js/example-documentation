{
	"version": "1.0.0",
	"metadata": {
		"linker": "(unsigned)",
		"siteDomain": "https://webdoc-labs.github.io",
		"siteRoot": "example-documentation"
	},
	"root": {
		"id": "root-twLVMzISYb1qFmA-cVXuT",
		"name": "",
		"type": "RootDoc",
		"members": [
			{
				"id": "GcFbgXKTgeJvUXNqrhBo7",
				"name": "PIXI",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "bdj9jroDOaqCul5CDsmeA",
						"name": "utils",
						"brief": "",
						"defaultValue": "false",
						"scope": "static",
						"type": "NSDoc",
						"members": [
							{
								"id": "C44aJ6MIRRsIxSTYYhOvA",
								"name": "skipHello",
								"brief": "<p>Skips the hello message of renderers that are created after this is run.</p>",
								"deprecated": true,
								"type": "FunctionDoc",
								"params": [],
								"returns": [
									{
										"dataType": {
											"tokens": [
												{
													"value": "void",
													"kind": "canonical"
												}
											],
											"template": "void"
										}
									}
								]
							}
						]
					},
					{
						"id": "UF_Z0gkug4jZ0u3W8_kjA",
						"name": "TilingSprite",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.TilingSprite"
						],
						"type": "ClassDoc",
						"members": [
							{
								"id": "C4TtvlXs9C7SCikcciw1n",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "Rmt2lMDA8nPqK4c6sO-n5",
						"name": "AbstractRenderer",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "cAL4GfKkE5QjT7gDVAi9A",
								"name": "backgroundColor",
								"brief": "<p>The background color to fill if not transparent</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "ZQny3LYDMfyGtvJ0viEbX",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "_J9FAkcI5ThX22byG2EES",
						"name": "ObjectRenderer",
						"brief": "<p>Base for a common object renderer that can be used as a system renderer plugin.</p>",
						"type": "ClassDoc",
						"extends": [
							"PIXI.System"
						],
						"members": [
							{
								"id": "frgFhwARgxbgSJra6SsEI",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "YFo6Rbl7sDVRhaPweEwNY",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "EmaXCbr_IJTl12EhlPbdE",
								"name": "destroy",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Generic destruction method that frees all resources. This\nshould be called by subclasses.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "48TehHWvr8-h09RsIUXr_",
								"name": "flush",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that should be used to empty the current\nbatch by rendering objects now.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "gez9jANfkZN3pblxlwRUo",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Keeps the object to render. It doesn't have to be\nrendered immediately.</p>",
								"params": [
									{
										"identifier": "object",
										"optional": false,
										"description": "<p>The object to render.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "M3UYEduXUMmOHAhXW-iMG",
								"name": "start",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stub method that initializes any state required before\nrendering starts. It is different from the <code>prerender</code>\ns...",
								"params": [],
								"returns": []
							},
							{
								"id": "-5VpZ-wMj1S4yFHUiJQKI",
								"name": "stop",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Stops the renderer. It should free up any state and\nbecome dormant.</p>",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "ABVivEWKWEvTk6HwHGXks",
						"name": "System",
						"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.AbstractRenderer}.</p>",
						"see": [
							"PIXI.Renderer#addSystem"
						],
						"type": "ClassDoc",
						"description": "<p>Search more here: {@link https://www.google.com/}</p>",
						"members": [
							{
								"id": "Si0GPNc3vB-W_5bUm8rwc",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "nynjvGiukfF8_J5QKXhnp",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this manager works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "ot9eNPa2u1pfKSHg_XG4W",
								"name": "destroy",
								"brief": "<p>Generic destroy methods to be overridden by the subclass</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							}
						]
					},
					{
						"id": "JbSm-nes0RVpmpWWrr9IE",
						"name": "AbstractBatchRenderer",
						"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
						"access": "protected",
						"readonly": true,
						"type": "ClassDoc",
						"description": "<p>This is the default batch renderer. It buffers objects\nwith texture-based geometries and renders them in\nbatches. It uploa...",
						"extends": [
							"PIXI.ObjectRenderer"
						],
						"members": [
							{
								"id": "Hi4kZ2gNYTN97_cRer3R6",
								"name": "_drawCallPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "YtrI1pddtCXKIjn1t_Zvx",
								"name": "_textureArrayPool",
								"brief": "",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>BatchDrawCall</code> objects that <code>flush</code> used\nto create &quot;batches&quot; of the objects being..."
							},
							{
								"id": "ThAM7zPgAFlH-9i68NXGr",
								"name": "bufferSize",
								"brief": "",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "4IKHtiffCwT8-7_7dOeBM",
								"name": "MAX_TEXTURES",
								"brief": "",
								"defaultValue": "1",
								"readonly": true,
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Maximum number of textures that can be uploaded to\nthe GPU under the current context. It is initialized\nproperly in <code>..."
							},
							{
								"id": "0QrgTbth6c_tjH5QaUmXm",
								"name": "renderer",
								"brief": "<p>The renderer this manager works for.</p>",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "mgi6frYC7tb_t3z4BX8PP",
								"name": "size",
								"brief": "",
								"defaultValue": "settings.SPRITE_BATCH_SIZE * 4",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The number of bufferable objects before a flush\noccurs automatically.</p>"
							},
							{
								"id": "coE3L1t6KYwT7JOmj5vRt",
								"name": "state",
								"brief": "<p>The WebGL state in which this renderer will work.</p>",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "om_Gsl5qFw4UMSI6d-weC",
								"name": "vertexSize",
								"brief": "",
								"defaultValue": "undefined",
								"readonly": true,
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of data being buffered per vertex in the\nattribute buffers (in floats). By default, the\nbatch-renderer plugin uses 6:..."
							},
							{
								"id": "85eMvCfuCpuw0WhOn4fW3",
								"name": "_shader",
								"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>It is generated specifically to handle the required\nnumber of textures being batched together.</p>"
							},
							{
								"id": "5dtrBkElr3S5dMlmkvu6F",
								"name": "geometryClass",
								"brief": "",
								"access": "protected",
								"defaultValue": "PIXI.BatchGeometry",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>The class that represents the geometry of objects\nthat are going to be batched with this.</p>"
							},
							{
								"id": "tNbR5jrj92Cx44gldXwTc",
								"name": "shaderGenerator",
								"brief": "",
								"access": "protected",
								"defaultValue": "undefined",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>This is used to generate a shader that can\ncolor each vertex based on a <code>aTextureId</code>\nattribute that points to a..."
							},
							{
								"id": "VHreUHg-Zc3ZtCgb1Agxy",
								"name": "_aBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getAttributeBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>ViewableBuffer</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer ..."
							},
							{
								"id": "i7OEYxvl6x7imLBpcCwgq",
								"name": "_bufferedElements",
								"brief": "<p>Buffer of objects that are yet to be rendered.</p>",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc"
							},
							{
								"id": "leKSBu2eNibPJRmJmNUZH",
								"name": "_bufferedTextures",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Data for texture batch builder, helps to save a bit of CPU on a pass</p>"
							},
							{
								"id": "ShHrLi4UCFqUR_ncTP3_p",
								"name": "_bufferSize",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Number of elements that are buffered and are\nwaiting to be flushed.</p>"
							},
							{
								"id": "I2fkKi1K65dDkZb_zmoHl",
								"name": "_flushId",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>A flush may occur multiple times in a single\nframe. On iOS devices or when\n<code>settings.CAN_UPLOAD_SAME_BUFFER</code> is..."
							},
							{
								"id": "kFL0I4hpzcecs704QNgwI",
								"name": "_iBuffers",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer#getIndexBuffer"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>Uint16Array</code> objects that are sorted in\norder of increasing size. The flush method uses\nthe buffer wit..."
							},
							{
								"id": "VheGSTxudauxtgF4-tazX",
								"name": "_indexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all indices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "jRjzDVPdUFpNLByTsH15x",
								"name": "_packedGeometries",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"see": [
									"PIXI.AbstractBatchRenderer.contextChange"
								],
								"type": "PropertyDoc",
								"description": "<p>Pool of <code>this.geometryClass</code> geometry objects\nthat store buffers. They are used to pass data\nto the shader on e..."
							},
							{
								"id": "j-HXKqUlmCr8b5a7XAS8x",
								"name": "_packedGeometryPoolSize",
								"brief": "",
								"access": "private",
								"defaultValue": "2",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Size of <code>this._packedGeometries</code>. It can be expanded\nif more than <code>this._packedGeometryPoolSize</code> flu..."
							},
							{
								"id": "oiRehjqjIYeCYDpegMf-m",
								"name": "_vertexCount",
								"brief": "",
								"access": "private",
								"defaultValue": "0",
								"scope": "instance",
								"type": "PropertyDoc",
								"description": "<p>Total count of all vertices used by the currently\nbuffered objects.</p>"
							},
							{
								"id": "baRwoofySKlJkDQamkqHQ",
								"name": "bindAndClearTexArray",
								"brief": "<p>Bind textures for current rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "PNOVqVxB52UaDkK8L97wv",
								"name": "buildDrawCalls",
								"brief": "<p>Populating drawcalls for rendering</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [
									{
										"identifier": "texArray",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												},
												{
													"value": "PIXI.BatchTextureArray",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "start",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "finish",
										"optional": false,
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "UREeACt2khTU1iN3Z4GvE",
								"name": "constructor",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>This will hook onto the renderer's <code>contextChange</code>\nand <code>prerender</code> signals.</p>",
								"params": [
									{
										"identifier": "renderer",
										"optional": false,
										"description": "<p>The renderer this works for.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Renderer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "VIIJiN_UP2UVyQ3oMPC9l",
								"name": "contextChange",
								"brief": "<p>Handles the <code>contextChange</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It calculates <code>this.MAX_TEXTURES</code> and allocating the\npacked-geometry object pool.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "am5Y8M3PNdZCTVE4rrYgl",
								"name": "destroy",
								"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "4jHPD5AFT0kcS6jAPzE9F",
								"name": "drawBatches",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "BZC3kjghI2PNh4_r_VLun",
								"name": "flush",
								"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "3fsWPe96S9A3Ju27U6IAN",
								"name": "initFlushBuffers",
								"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "my_8zca6WWCIYzquAPtbk",
								"name": "onPrerender",
								"brief": "<p>Handles the <code>prerender</code> signal.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>It ensures that flushes start from the first geometry\nobject again.</p>",
								"params": [],
								"returns": []
							},
							{
								"id": "Qt_fJHnP0vCpMFQltGiFy",
								"name": "packInterleavedGeometry",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Takes the four batching parameters of <code>element</code>, interleaves\nand pushes them into the batching attribute/index ...",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>element being rendered</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												},
												{
													"value": "PIXI.Sprite",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "attributeBuffer",
										"optional": false,
										"description": "<p>attribute buffer.</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "PIXI.ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "indexBuffer",
										"optional": false,
										"description": "<p>index buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "aIndex",
										"optional": false,
										"description": "<p>number of floats already in the attribute buffer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									},
									{
										"identifier": "iIndex",
										"optional": false,
										"description": "<p>number of indices already in <code>indexBuffer</code></p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "VlMPdbdb-QonZsrB6hYUl",
								"name": "render",
								"brief": "",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Buffers the &quot;batchable&quot; object. It need not be rendered\nimmediately.</p>",
								"params": [
									{
										"identifier": "element",
										"optional": false,
										"description": "<p>the element to render when\nusing this renderer</p>",
										"dataType": {
											"tokens": [
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												},
												{
													"value": "PIXI.DisplayObject",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": []
							},
							{
								"id": "AlMIy_wuUn0kAq1wvg_9b",
								"name": "start",
								"brief": "<p>Starts a new sprite batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "uad40BobpdaSNESy-n1JQ",
								"name": "stop",
								"brief": "<p>Stops and flushes the current batch.</p>",
								"scope": "instance",
								"type": "MethodDoc",
								"params": [],
								"returns": []
							},
							{
								"id": "iWYN-6U1z7VOJO9-yxFds",
								"name": "getAttributeBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an attribute buffer from <code>this._aBuffers</code> that\ncan hold atleast <code>size</code> floats.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum capacity required</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer than can hold atleast <code>size</code> floats</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												},
												{
													"value": "ViewableBuffer",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							},
							{
								"id": "FANMLojOIIL0eQQ0-VJO_",
								"name": "getIndexBuffer",
								"brief": "",
								"access": "private",
								"scope": "instance",
								"type": "MethodDoc",
								"description": "<p>Fetches an index buffer from <code>this._iBuffers</code> that can\nhas atleast <code>size</code> capacity.</p>",
								"params": [
									{
										"identifier": "size",
										"optional": false,
										"description": "<p>minimum required capacity</p>",
										"dataType": {
											"tokens": [
												{
													"value": "number",
													"kind": "canonical"
												},
												{
													"value": "number",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								],
								"returns": [
									{
										"description": "<ul>\n<li>buffer that can fit <code>size</code>\nindices.</li>\n</ul>",
										"dataType": {
											"tokens": [
												{
													"value": "Uint16Array",
													"kind": "canonical"
												},
												{
													"value": "Uint16Array",
													"kind": "canonical"
												}
											],
											"template": "%1"
										}
									}
								]
							}
						]
					},
					{
						"id": "vx1kNUZ-JoaZWduD9YcPB",
						"name": "",
						"brief": "",
						"type": "TypedefDoc",
						"extends": [],
						"members": [
							{
								"id": "2e6clzB7V82jnQWNY2FfQ",
								"name": "destroy",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when destroying Application, scoped to Application instance</p>"
							},
							{
								"id": "EMtHj5XiCccgrGF8_GkPT",
								"name": "init",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc",
								"description": "<p>Called when Application is constructed, scoped to Application instance.\nPasses in <code>options</code> as the only argumen..."
							}
						]
					},
					{
						"id": "jidjKR8LwKoB2Q_8EO3Oz",
						"name": "SVG_SIZE",
						"brief": "",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"see": [
							"PIXI.resources.SVGResource.SVG_SIZE"
						],
						"type": "PropertyDoc"
					},
					{
						"id": "UjP0TLIVaAG_fp6-E7Tz6",
						"name": "TRANSFORM_MODE",
						"brief": "<p>Constants that specify the transform type.</p>",
						"deprecated": "since 5.0.0",
						"scope": "static",
						"type": "PropertyDoc",
						"members": [
							{
								"id": "DEb5PTZgUi07GjFiKkBb7",
								"name": "DYNAMIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							},
							{
								"id": "pNhNh4jD8LO--0pE5SO-5",
								"name": "STATIC",
								"brief": "",
								"access": "public",
								"scope": "static",
								"type": "PropertyDoc"
							}
						]
					}
				]
			},
			{
				"id": "qiZT3VNl5pTvYW_Zwoqxn",
				"name": "R",
				"brief": "<p>A namespace dedicated to road manipulation utilites.</p>",
				"readonly": true,
				"type": "NSDoc",
				"members": [
					{
						"id": "gV6DxRSulOsvp3HhafGFJ",
						"name": "Road",
						"brief": "<p>This is another road class.</p>",
						"type": "ClassDoc",
						"members": [
							{
								"id": "v0EWbByNEMWEm5AY0ugZV",
								"name": "constructor",
								"brief": "<p>This is another road class.</p>",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					},
					{
						"id": "ymcs5r_z6b8etn29lkms0",
						"name": "DEFAULT_LANES",
						"brief": "<p>The default no. of lanes per one side of road</p>",
						"defaultValue": "4",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "3gkgCOfnc4DOf4xH8C3wc",
						"name": "buildRoad",
						"brief": "<p>Builds a road</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "address",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "bordrR0WkheVAwpyTED0b",
				"name": "Ts",
				"brief": "",
				"type": "NSDoc",
				"members": [
					{
						"id": "h4iYnaQO1zbRq9Ucx-j91",
						"name": "Transaction",
						"brief": "",
						"type": "ClassDoc",
						"members": [
							{
								"id": "RW2-4FL0H77Dtym1RFMHS",
								"name": "constructor",
								"brief": "",
								"access": "public",
								"scope": "instance",
								"type": "MethodDoc"
							}
						]
					}
				]
			},
			{
				"id": "cjhQ2equvNcUB8dSQQiMP",
				"name": "Bean",
				"brief": "<p>Bean class</p>",
				"type": "ClassDoc",
				"members": [
					{
						"id": "xa4QIgr_BZEC3fXpRt5Fw",
						"name": "constructor",
						"brief": "<p>Bean class</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "bXXCnijQbVVSmctWYukcY",
						"name": "roast",
						"brief": "<p>(optional) roasting method</p>",
						"abstract": true,
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "void",
											"kind": "canonical"
										}
									],
									"template": "void"
								}
							}
						]
					}
				]
			},
			{
				"id": "vzFs6Iu85daLlGVeddNn2",
				"name": "Car",
				"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
				"type": "ClassDoc",
				"description": "<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> car = <span class=\"hljs-keyword\">new</span> Car({...",
				"extends": [
					"PhysicalObject"
				],
				"members": [
					{
						"id": "FD0nX1i4UA6uWCke7DoKd",
						"name": "DEFAULT_DRIVE_SHIFT",
						"brief": "",
						"defaultValue": "\"manual\"",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "u-Kj1rA5N0LlSX3b25Gs0",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "z3Mrmw8vE30nCRU4Q_mBW",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "p5huHh7o68yIEGSOyF5uR",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "HN0T3nretMttXNi8tgh1S",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "m2jPX9A3hASIF7xR70Z5D",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "IRXsM4frDighti0MEofY5",
						"name": "vin",
						"brief": "",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "28zuwCOXCCJysS_VdpExg",
						"name": "registerRetail",
						"brief": "<p>Register a retail dealer for buying a car from</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "name",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					},
					{
						"id": "kEPh1gPFUTraq0H1rSQmi",
						"name": "constructor",
						"brief": "<p><em>Simulation</em> for a automobile that can drive on a manifold surface.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "IuahTZ5jbU6sIvyf1IJoW",
						"name": "onCrash",
						"brief": "",
						"examples": [
							{
								"caption": "",
								"code": "\n car.onCrash((car) => console.logicalAssignment(car.id + \" crashed!\"))\n"
							}
						],
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "callback",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Function",
											"kind": "canonical"
										}
									],
									"template": "Function"
								}
							},
							{
								"identifier": "callback.name",
								"dataType": {
									"tokens": [
										{
											"value": "string",
											"kind": "canonical"
										}
									],
									"template": "string"
								}
							}
						],
						"returns": []
					}
				]
			},
			{
				"id": "0VZh3dNw1fVMwbOW5thWk",
				"name": "CoffeeBean",
				"brief": "<p>This class illustrates how you can create a Java-bean like component in JavaScript</p>",
				"type": "ClassDoc",
				"extends": [
					"Bean"
				],
				"members": [
					{
						"id": "VfZY-XdmuBtgEOmpLlclX",
						"name": "maturity",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "kEGjDardcgymCo3REq656",
						"name": "roasted",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "WkTk85TAxjIyDZwPXXeWR",
						"name": "constructor",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "options",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							},
							{
								"identifier": "options.roasted",
								"optional": true,
								"description": "<p>whether the bean is <code>roasted</code></p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							},
							{
								"identifier": "options.maturity",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "number",
											"kind": "canonical"
										},
										{
											"value": "number",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "3aWE9OpDBBu75WNXlD8Z2",
						"name": "roast",
						"brief": "<p>Roast this coffee bean.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>NOTE: You cannot re-roast coffee beans and an error will be thrown if you try to\nroast a roasted coffee bean.</p>",
						"params": [],
						"returns": []
					}
				]
			},
			{
				"id": "RGcPHw-gKMfkeXZIIIv99",
				"name": "ExampleFactory",
				"type": "ClassDoc",
				"description": "<p>{@link ExampleFactory} can be used to build examples.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/...",
				"params": [
					{
						"identifier": "context",
						"optional": true,
						"default": "null",
						"description": "<p>A custom context for the factory.</p>",
						"dataType": {
							"tokens": [
								{
									"value": "ExampleContext",
									"kind": "canonical"
								},
								{
									"value": "ExampleContext",
									"kind": "canonical"
								}
							],
							"template": "%1"
						}
					}
				],
				"returns": [],
				"members": [
					{
						"id": "vN6leDA6izFn-Q-5BAmVs",
						"name": "getInstance",
						"brief": "<p>Gets a lazily-initialized, shared singleton instance of {@link ExampleFactory}.</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleFactory",
											"kind": "canonical"
										},
										{
											"value": "ExampleFactory",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "JjM8bxFWYAFf3hmNqo8_N",
						"name": "build",
						"brief": "<p>Build the road.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": []
					},
					{
						"id": "heG9s9GZ83z37nXgP88Ob",
						"name": "constructor",
						"brief": "<p>This constructor should only be used for custom contexts.</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "context",
								"optional": true,
								"default": "null",
								"description": "<p>A custom context for the factory.</p>",
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "gIWJdhOIHBSmvjtk4ZUqh",
						"name": "getContext",
						"brief": "<p>Get the context of this factory.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "ExampleContext",
											"kind": "canonical"
										},
										{
											"value": "ExampleContext",
											"kind": "canonical"
										}
									],
									"template": "%1"
								}
							}
						]
					}
				]
			},
			{
				"id": "qGQtyJPsCqI3l7kaFBd-r",
				"name": "Gravity",
				"brief": "<p>This class shouldn't be documented!</p>",
				"type": "ClassDoc",
				"extends": [
					"PhysicalInteraction"
				],
				"members": [
					{
						"id": "_LWc6vDkk_2oEVBYzGq9J",
						"name": "constructor",
						"brief": "<p>This class shouldn't be documented!</p>",
						"access": "public",
						"scope": "instance",
						"type": "MethodDoc"
					},
					{
						"id": "oDJsRkP91USIM2qeIv-pR",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "LBYw0lBRi_BlV0nsIgYNq",
				"name": "PhysicalInteraction",
				"brief": "",
				"readonly": true,
				"type": "ClassDoc",
				"description": "<p>A physical interaction is a force causes object positions to be re-evaulated each frame based on\nforce's magnitude.</p>",
				"members": [
					{
						"id": "cV1HLL1kpcdqjQiXabHI7",
						"name": "GRAVITATIONAL_CONSTANT",
						"brief": "",
						"defaultValue": "1",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "fW0quqnfLkZYYwNByf2fV",
						"name": "createGravity",
						"brief": "<p>Creates a graviational force</p>",
						"scope": "static",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "objects",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Tuple<PhysicalObject, 2><PhysicalObject, 2>",
											"kind": "canonical"
										},
										{
											"value": "Tuple",
											"kind": "canonical"
										},
										{
											"value": "PhysicalObject",
											"kind": "link"
										},
										{
											"value": "2",
											"kind": "canonical"
										}
									],
									"template": "%1<%3, %2>"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "PhysicalInteraction",
											"kind": "canonical"
										},
										{
											"value": "PhysicalInteraction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						]
					},
					{
						"id": "ntmk0shDx5rTlOh7s0JcA",
						"name": "force",
						"brief": "<p>This method should be overriden to calculate the force at the given instant.</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "Vector<3>",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										},
										{
											"value": "3",
											"kind": "canonical"
										}
									],
									"template": "%1<%2>"
								}
							}
						]
					}
				]
			},
			{
				"id": "HUrH2CxwdR5l8Yip30Wet",
				"name": "PhysicalObject",
				"brief": "",
				"type": "ClassDoc",
				"description": "<p>Represents a physical-object and its intrinsic properties. This is useful for approximating\nextended objects as a uniform,...",
				"members": [
					{
						"id": "OVIf-L75JHZVvUt9OUes2",
						"name": "bounds",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The mesh enclosing this object. By default, it is a &quot;point&quot; object at the its own\nposition.</p>"
					},
					{
						"id": "PNRKk3S--Kc9lavVEWI31",
						"name": "interactions",
						"brief": "<p>All causal interactions with other objects</p>",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "ZmMyuRtTiI-0BJzh0kwGC",
						"name": "mass",
						"brief": "<p>The mass of this object in kilograms.</p>",
						"defaultValue": "0",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "B2xTohM2fSSpVwUpt480w",
						"name": "position",
						"brief": "<p>The absolute position of this object's center of mass (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					},
					{
						"id": "lLecpbWt5bSBO6zyNCYEV",
						"name": "velocity",
						"brief": "<p>The absolute velocity of this object (in the universal reference frame)</p>",
						"defaultValue": "[0, 0, 0]",
						"scope": "instance",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "grxWba2KiFnttqjd_fr9e",
				"name": "Vector",
				"brief": "",
				"type": "ClassDoc",
				"extends": [
					"Array"
				],
				"members": [
					{
						"id": "w0T3QMZUFFS5u1CyFYGVJ",
						"name": "dimensions",
						"brief": "",
						"scope": "instance",
						"type": "PropertyDoc",
						"description": "<p>The no. of components of this vector</p>"
					},
					{
						"id": "97Ha62pUIizkhAnu_i1a-",
						"name": "add",
						"brief": "<p>Add <code>vec</code> to this</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": []
					},
					{
						"id": "plHIrVwEgaXzhWMShU3Pz",
						"name": "equalTo",
						"brief": "<p>Whether this and <code>vec</code> are equal vectors</p>",
						"scope": "instance",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "pIHz9LSqx2iab1spGBiw5",
						"name": "isCompat",
						"brief": "",
						"scope": "instance",
						"type": "MethodDoc",
						"description": "<p>Whether this and <code>vec</code> are compatible vectors (same dimensions)</p>",
						"params": [
							{
								"identifier": "vec",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Vector",
											"kind": "canonical"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "ZeNhquSL4NwdD3pI_Fglt",
				"name": "CAR_MAKES",
				"brief": "",
				"see": [
					"CarDealer"
				],
				"type": "EnumDoc",
				"description": "<p>These are the possible types of car makes.</p>",
				"members": [
					{
						"id": "tmxa5MgqPuy1mSaPu8rvd",
						"name": "FERRARI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "hkiLlw9zYBqJ_aQQOL5UV",
						"name": "FORD",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "nCqzztG9wnEtcL6pVxugu",
						"name": "GENERAL_MOTORS",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "ZP9AaILWjYP1HDDqKCzDy",
						"name": "JAGUAR",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "B1hCd-iImo27NrT4gm6hQ",
						"name": "KIA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "9Fgi4L3pWHfA2Nd2HXtrs",
						"name": "LAMBORGHINI",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					},
					{
						"id": "NclmBrO6Vdo8KykuvySmZ",
						"name": "TOYOTA",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc",
						"description": "<p>toyota make</p>"
					}
				]
			},
			{
				"id": "0tl2ltgU1zZ04Zy0bYQCd",
				"name": "VectorArray",
				"brief": "",
				"type": "TypedefDoc",
				"description": "<p>A 3D vector</p>",
				"members": [
					{
						"id": "OSX1WXcr6_95Pe2h-8Qh8",
						"name": "meta",
						"brief": "",
						"access": "public",
						"scope": "static",
						"type": "PropertyDoc"
					}
				]
			},
			{
				"id": "IiubM0Y0G7GbIlxQqwy6U",
				"name": "CarDealer",
				"brief": "<p>This is the interface for dealing with car dealers.</p>",
				"type": "InterfaceDoc",
				"members": [
					{
						"id": "rDKsDQ_eEFGWTz00gOrg3",
						"name": "closeTransaction",
						"brief": "<p>Close transaction. If you respond to the counteroffer, then it won't be closed.</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "trans",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "(...t: Transaction) => void",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "(...t: %1) => void"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "trans is Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "trans is %1"
								}
							}
						]
					},
					{
						"id": "HhlxeJ3q6ROi8pFZmkoW6",
						"name": "initiateTransaction",
						"brief": "<p>Initiate a transaction/negotiation with a car dealer</p>",
						"type": "MethodDoc",
						"params": [
							{
								"identifier": "x",
								"optional": true,
								"description": "<p>info</p>",
								"dataType": {
									"tokens": [
										{
											"value": "object",
											"kind": "canonical"
										}
									],
									"template": "object"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "typeof Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "typeof %1"
								}
							}
						]
					},
					{
						"id": "0UD_dY0KhsBBBBraBs5nq",
						"name": "offerAsk",
						"brief": "<p>Offer a price to sell the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the buyer in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "Transaction",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "%1"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "(t: Car) => void",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										}
									],
									"template": "(t: %1) => void"
								}
							},
							{
								"identifier": "test",
								"optional": false,
								"dataType": {
									"tokens": [
										{
											"value": "",
											"kind": "canonical"
										}
									],
									"template": "{ [testProperty in keyof keyof] }: number"
								}
							}
						],
						"returns": [
							{
								"description": "<p>type inference is working</p>",
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					},
					{
						"id": "0M3Tyx6kcaPx8liEEkbal",
						"name": "offerBid",
						"brief": "<p>Offer a price to buy the car.</p>",
						"type": "MethodDoc",
						"description": "<p>NOTE: This is invalid behaviour if you are the seller in the transaction.</p>",
						"params": [
							{
								"identifier": "on",
								"optional": true,
								"dataType": {
									"tokens": [
										{
											"value": "{ t : Transaction, : Transaction[] }",
											"kind": "canonical"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										},
										{
											"value": "Ts.Transaction",
											"kind": "link"
										}
									],
									"template": "{ t : %1, [id: string]: %2[] }"
								}
							},
							{
								"identifier": "counteroffer",
								"optional": true,
								"variadic": true,
								"dataType": {
									"tokens": [
										{
											"value": "Car | Vector",
											"kind": "canonical"
										},
										{
											"value": "Car",
											"kind": "link"
										},
										{
											"value": "Vector",
											"kind": "link"
										}
									],
									"template": "%1 | %2"
								}
							}
						],
						"returns": [
							{
								"dataType": {
									"tokens": [
										{
											"value": "boolean",
											"kind": "canonical"
										}
									],
									"template": "boolean"
								}
							}
						]
					}
				]
			},
			{
				"id": "OJwbngfE5lc8Z11k6FcJB",
				"name": "installBean",
				"brief": "<p>Install a bean class</p>",
				"type": "FunctionDoc",
				"params": [
					{
						"identifier": "bean",
						"optional": false,
						"description": "<p>the bean class</p>",
						"dataType": {
							"tokens": [
								{
									"value": "{ : Bean }",
									"kind": "canonical"
								},
								{
									"value": "Bean",
									"kind": "link"
								}
							],
							"template": "{ new (): %1 }"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "void",
									"kind": "canonical"
								}
							],
							"template": "void"
						}
					}
				]
			},
			{
				"id": "F0WZEMUeYjegUEicJgfJF",
				"name": "isPhysicalObject",
				"brief": "",
				"authors": [
					"Shukant K. Pal &lt;shukantpal@outlook.com&gt;"
				],
				"copyright": "Shukant K. Pal (C) 2020",
				"license": "MIT",
				"see": [
					"PhysicalObject"
				],
				"since": "2020",
				"type": "FunctionDoc",
				"description": "<p>Checks whether the object is an instance of {@code PhysicalObject}.</p>",
				"params": [
					{
						"identifier": "object",
						"optional": false,
						"dataType": {
							"tokens": [
								{
									"value": "Object",
									"kind": "canonical"
								}
							],
							"template": "Object"
						}
					}
				],
				"returns": [
					{
						"dataType": {
							"tokens": [
								{
									"value": "boolean",
									"kind": "canonical"
								}
							],
							"template": "boolean"
						}
					}
				]
			}
		]
	},
	"registry": {
		"pkg-PuQgJX9p0H1M7MT7qSa35": {
			"uri": "/example-documentation/@webdoc/example.html"
		},
		"GcFbgXKTgeJvUXNqrhBo7": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html"
		},
		"bdj9jroDOaqCul5CDsmeA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils.html"
		},
		"C44aJ6MIRRsIxSTYYhOvA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/utils/skipHello.html"
		},
		"UF_Z0gkug4jZ0u3W8_kjA": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html"
		},
		"C4TtvlXs9C7SCikcciw1n": {
			"uri": "/example-documentation/@webdoc/example/PIXI/TilingSprite.html#constructor"
		},
		"Rmt2lMDA8nPqK4c6sO-n5": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html"
		},
		"cAL4GfKkE5QjT7gDVAi9A": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#backgroundColor"
		},
		"ZQny3LYDMfyGtvJ0viEbX": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractRenderer.html#constructor"
		},
		"_J9FAkcI5ThX22byG2EES": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html"
		},
		"frgFhwARgxbgSJra6SsEI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#renderer"
		},
		"YFo6Rbl7sDVRhaPweEwNY": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#constructor"
		},
		"EmaXCbr_IJTl12EhlPbdE": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#destroy"
		},
		"48TehHWvr8-h09RsIUXr_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#flush"
		},
		"gez9jANfkZN3pblxlwRUo": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#render"
		},
		"M3UYEduXUMmOHAhXW-iMG": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#start"
		},
		"-5VpZ-wMj1S4yFHUiJQKI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/ObjectRenderer.html#stop"
		},
		"ABVivEWKWEvTk6HwHGXks": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html"
		},
		"Si0GPNc3vB-W_5bUm8rwc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#renderer"
		},
		"nynjvGiukfF8_J5QKXhnp": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#constructor"
		},
		"ot9eNPa2u1pfKSHg_XG4W": {
			"uri": "/example-documentation/@webdoc/example/PIXI/System.html#destroy"
		},
		"JbSm-nes0RVpmpWWrr9IE": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html"
		},
		"Hi4kZ2gNYTN97_cRer3R6": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_drawCallPool"
		},
		"YtrI1pddtCXKIjn1t_Zvx": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_textureArrayPool"
		},
		"ThAM7zPgAFlH-9i68NXGr": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bufferSize"
		},
		"4IKHtiffCwT8-7_7dOeBM": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#MAX_TEXTURES"
		},
		"0QrgTbth6c_tjH5QaUmXm": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#renderer"
		},
		"mgi6frYC7tb_t3z4BX8PP": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#size"
		},
		"coE3L1t6KYwT7JOmj5vRt": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#state"
		},
		"om_Gsl5qFw4UMSI6d-weC": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#vertexSize"
		},
		"85eMvCfuCpuw0WhOn4fW3": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_shader"
		},
		"5dtrBkElr3S5dMlmkvu6F": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#geometryClass"
		},
		"tNbR5jrj92Cx44gldXwTc": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#shaderGenerator"
		},
		"VHreUHg-Zc3ZtCgb1Agxy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_aBuffers"
		},
		"i7OEYxvl6x7imLBpcCwgq": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedElements"
		},
		"leKSBu2eNibPJRmJmNUZH": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferedTextures"
		},
		"ShHrLi4UCFqUR_ncTP3_p": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_bufferSize"
		},
		"I2fkKi1K65dDkZb_zmoHl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_flushId"
		},
		"kFL0I4hpzcecs704QNgwI": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_iBuffers"
		},
		"VheGSTxudauxtgF4-tazX": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_indexCount"
		},
		"jRjzDVPdUFpNLByTsH15x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometries"
		},
		"j-HXKqUlmCr8b5a7XAS8x": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_packedGeometryPoolSize"
		},
		"oiRehjqjIYeCYDpegMf-m": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#_vertexCount"
		},
		"baRwoofySKlJkDQamkqHQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#bindAndClearTexArray"
		},
		"PNOVqVxB52UaDkK8L97wv": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#buildDrawCalls"
		},
		"UREeACt2khTU1iN3Z4GvE": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#constructor"
		},
		"VIIJiN_UP2UVyQ3oMPC9l": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#contextChange"
		},
		"am5Y8M3PNdZCTVE4rrYgl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#destroy"
		},
		"4jHPD5AFT0kcS6jAPzE9F": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#drawBatches"
		},
		"BZC3kjghI2PNh4_r_VLun": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#flush"
		},
		"3fsWPe96S9A3Ju27U6IAN": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#initFlushBuffers"
		},
		"my_8zca6WWCIYzquAPtbk": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#onPrerender"
		},
		"Qt_fJHnP0vCpMFQltGiFy": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#packInterleavedGeometry"
		},
		"VlMPdbdb-QonZsrB6hYUl": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#render"
		},
		"AlMIy_wuUn0kAq1wvg_9b": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#start"
		},
		"uad40BobpdaSNESy-n1JQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#stop"
		},
		"iWYN-6U1z7VOJO9-yxFds": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getAttributeBuffer"
		},
		"FANMLojOIIL0eQQ0-VJO_": {
			"uri": "/example-documentation/@webdoc/example/PIXI/AbstractBatchRenderer.html#getIndexBuffer"
		},
		"vx1kNUZ-JoaZWduD9YcPB": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html"
		},
		"2e6clzB7V82jnQWNY2FfQ": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#destroy"
		},
		"EMtHj5XiCccgrGF8_GkPT": {
			"uri": "/example-documentation/@webdoc/example/PIXI/.html#init"
		},
		"jidjKR8LwKoB2Q_8EO3Oz": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#SVG_SIZE"
		},
		"UjP0TLIVaAG_fp6-E7Tz6": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE"
		},
		"DEb5PTZgUi07GjFiKkBb7": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE#DYNAMIC"
		},
		"pNhNh4jD8LO--0pE5SO-5": {
			"uri": "/example-documentation/@webdoc/example/PIXI.html#TRANSFORM_MODE#STATIC"
		},
		"qiZT3VNl5pTvYW_Zwoqxn": {
			"uri": "/example-documentation/@webdoc/example/R.html"
		},
		"gV6DxRSulOsvp3HhafGFJ": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html"
		},
		"v0EWbByNEMWEm5AY0ugZV": {
			"uri": "/example-documentation/@webdoc/example/R/Road.html#constructor"
		},
		"ymcs5r_z6b8etn29lkms0": {
			"uri": "/example-documentation/@webdoc/example/R.html#DEFAULT_LANES"
		},
		"3gkgCOfnc4DOf4xH8C3wc": {
			"uri": "/example-documentation/@webdoc/example/R.html#buildRoad"
		},
		"bordrR0WkheVAwpyTED0b": {
			"uri": "/example-documentation/@webdoc/example/Ts.html"
		},
		"h4iYnaQO1zbRq9Ucx-j91": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html"
		},
		"RW2-4FL0H77Dtym1RFMHS": {
			"uri": "/example-documentation/@webdoc/example/Ts/Transaction.html#constructor"
		},
		"cjhQ2equvNcUB8dSQQiMP": {
			"uri": "/example-documentation/@webdoc/example/Bean.html"
		},
		"xa4QIgr_BZEC3fXpRt5Fw": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#constructor"
		},
		"bXXCnijQbVVSmctWYukcY": {
			"uri": "/example-documentation/@webdoc/example/Bean.html#roast"
		},
		"vzFs6Iu85daLlGVeddNn2": {
			"uri": "/example-documentation/@webdoc/example/Car.html"
		},
		"FD0nX1i4UA6uWCke7DoKd": {
			"uri": "/example-documentation/@webdoc/example/Car.html#DEFAULT_DRIVE_SHIFT"
		},
		"u-Kj1rA5N0LlSX3b25Gs0": {
			"uri": "/example-documentation/@webdoc/example/Car.html#bounds"
		},
		"z3Mrmw8vE30nCRU4Q_mBW": {
			"uri": "/example-documentation/@webdoc/example/Car.html#interactions"
		},
		"p5huHh7o68yIEGSOyF5uR": {
			"uri": "/example-documentation/@webdoc/example/Car.html#mass"
		},
		"HN0T3nretMttXNi8tgh1S": {
			"uri": "/example-documentation/@webdoc/example/Car.html#position"
		},
		"m2jPX9A3hASIF7xR70Z5D": {
			"uri": "/example-documentation/@webdoc/example/Car.html#velocity"
		},
		"IRXsM4frDighti0MEofY5": {
			"uri": "/example-documentation/@webdoc/example/Car.html#vin"
		},
		"28zuwCOXCCJysS_VdpExg": {
			"uri": "/example-documentation/@webdoc/example/Car.html#registerRetail"
		},
		"kEPh1gPFUTraq0H1rSQmi": {
			"uri": "/example-documentation/@webdoc/example/Car.html#constructor"
		},
		"IuahTZ5jbU6sIvyf1IJoW": {
			"uri": "/example-documentation/@webdoc/example/Car.html#onCrash"
		},
		"0VZh3dNw1fVMwbOW5thWk": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html"
		},
		"VfZY-XdmuBtgEOmpLlclX": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#maturity"
		},
		"kEGjDardcgymCo3REq656": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roasted"
		},
		"WkTk85TAxjIyDZwPXXeWR": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#constructor"
		},
		"3aWE9OpDBBu75WNXlD8Z2": {
			"uri": "/example-documentation/@webdoc/example/CoffeeBean.html#roast"
		},
		"RGcPHw-gKMfkeXZIIIv99": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html"
		},
		"vN6leDA6izFn-Q-5BAmVs": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getInstance"
		},
		"JjM8bxFWYAFf3hmNqo8_N": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#build"
		},
		"heG9s9GZ83z37nXgP88Ob": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#constructor"
		},
		"gIWJdhOIHBSmvjtk4ZUqh": {
			"uri": "/example-documentation/@webdoc/example/ExampleFactory.html#getContext"
		},
		"qGQtyJPsCqI3l7kaFBd-r": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html"
		},
		"_LWc6vDkk_2oEVBYzGq9J": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#constructor"
		},
		"oDJsRkP91USIM2qeIv-pR": {
			"uri": "/example-documentation/@webdoc/example/Gravity.html#force"
		},
		"LBYw0lBRi_BlV0nsIgYNq": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html"
		},
		"cV1HLL1kpcdqjQiXabHI7": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#GRAVITATIONAL_CONSTANT"
		},
		"fW0quqnfLkZYYwNByf2fV": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#createGravity"
		},
		"ntmk0shDx5rTlOh7s0JcA": {
			"uri": "/example-documentation/@webdoc/example/PhysicalInteraction.html#force"
		},
		"HUrH2CxwdR5l8Yip30Wet": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html"
		},
		"OVIf-L75JHZVvUt9OUes2": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#bounds"
		},
		"PNRKk3S--Kc9lavVEWI31": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#interactions"
		},
		"ZmMyuRtTiI-0BJzh0kwGC": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#mass"
		},
		"B2xTohM2fSSpVwUpt480w": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#position"
		},
		"lLecpbWt5bSBO6zyNCYEV": {
			"uri": "/example-documentation/@webdoc/example/PhysicalObject.html#velocity"
		},
		"grxWba2KiFnttqjd_fr9e": {
			"uri": "/example-documentation/@webdoc/example/Vector.html"
		},
		"w0T3QMZUFFS5u1CyFYGVJ": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#dimensions"
		},
		"97Ha62pUIizkhAnu_i1a-": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#add"
		},
		"plHIrVwEgaXzhWMShU3Pz": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#equalTo"
		},
		"pIHz9LSqx2iab1spGBiw5": {
			"uri": "/example-documentation/@webdoc/example/Vector.html#isCompat"
		},
		"ZeNhquSL4NwdD3pI_Fglt": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html"
		},
		"tmxa5MgqPuy1mSaPu8rvd": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FERRARI"
		},
		"hkiLlw9zYBqJ_aQQOL5UV": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#FORD"
		},
		"nCqzztG9wnEtcL6pVxugu": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#GENERAL_MOTORS"
		},
		"ZP9AaILWjYP1HDDqKCzDy": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#JAGUAR"
		},
		"B1hCd-iImo27NrT4gm6hQ": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#KIA"
		},
		"9Fgi4L3pWHfA2Nd2HXtrs": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#LAMBORGHINI"
		},
		"NclmBrO6Vdo8KykuvySmZ": {
			"uri": "/example-documentation/@webdoc/example/CAR_MAKES.html#TOYOTA"
		},
		"0tl2ltgU1zZ04Zy0bYQCd": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html"
		},
		"OSX1WXcr6_95Pe2h-8Qh8": {
			"uri": "/example-documentation/@webdoc/example/VectorArray.html#meta"
		},
		"IiubM0Y0G7GbIlxQqwy6U": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html"
		},
		"rDKsDQ_eEFGWTz00gOrg3": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#closeTransaction"
		},
		"HhlxeJ3q6ROi8pFZmkoW6": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#initiateTransaction"
		},
		"0UD_dY0KhsBBBBraBs5nq": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerAsk"
		},
		"0M3Tyx6kcaPx8liEEkbal": {
			"uri": "/example-documentation/@webdoc/example/CarDealer.html#offerBid"
		},
		"OJwbngfE5lc8Z11k6FcJB": {
			"uri": "/example-documentation/@webdoc/example/installBean.html"
		},
		"F0WZEMUeYjegUEicJgfJF": {
			"uri": "/example-documentation/@webdoc/example/isPhysicalObject.html"
		}
	}
}